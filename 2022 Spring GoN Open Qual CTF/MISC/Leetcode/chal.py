while not (k := k if "k" in vars() else lambda c : __import__("functools").reduce(lambda f, g: lambda x: f(g(f(x))), [lambda x : __import__("hashlib").sha512(x).digest()] * 16, lambda x: x)(c)) or not (s := s if "s" in vars() else __import__("secret").s.hex()) or not (i := input().strip().ljust(16)) or any(any(k(x.encode()) != k(y.encode()) for x, y in zip(s[4 * t: 4 * t + 4], i[4 * t: 4 * t + 4])) for t in __import__("random").sample([0, 1, 2, 3], 4)) or print(open("flag").read()): print("ðŸ¤”", end="")